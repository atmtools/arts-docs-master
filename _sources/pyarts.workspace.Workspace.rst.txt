Workspace
#########

.. currentmodule:: pyarts.workspace

.. autoclass:: Workspace

  .. rubric:: Overview

  .. list-table::

    * - Method
      - :func:`~pyarts.workspace.Workspace.Ignore`
      - Ignore a workspace variable.
    * - Method
      - :func:`~pyarts.workspace.Workspace.OEM`
      - Inversion by the so called optimal estimation method (OEM).
    * - Method
      - :func:`~pyarts.workspace.Workspace.ReadCatalogData`
      - Reads split catalog data from a folder structure similar to ``arts-cat-data``
    * - Method
      - :func:`~pyarts.workspace.Workspace.ReadXML`
      - Reads a workspace variable from an XML file.
    * - Method
      - :func:`~pyarts.workspace.Workspace.ReadXMLIndexed`
      - As :func:`~pyarts.workspace.Workspace.ReadXML`, but reads indexed file names.
    * - Method
      - :func:`~pyarts.workspace.Workspace.RetrievalAddAtmosphere`
      - Add atmospheric property the retrieval setup.
    * - Method
      - :func:`~pyarts.workspace.Workspace.RetrievalAddMagneticField`
      - Add magnetic field component to the retrieval setup.
    * - Method
      - :func:`~pyarts.workspace.Workspace.RetrievalAddPressure`
      - Add atmospheric pressure to the retrieval setup.
    * - Method
      - :func:`~pyarts.workspace.Workspace.RetrievalAddSpeciesIsotopologueRatio`
      - Add species isotopologue ratio to the retrieval setup.
    * - Method
      - :func:`~pyarts.workspace.Workspace.RetrievalAddSpeciesVMR`
      - Add species VMR to the retrieval setup.
    * - Method
      - :func:`~pyarts.workspace.Workspace.RetrievalAddSurface`
      - Add surface property the retrieval setup.
    * - Method
      - :func:`~pyarts.workspace.Workspace.RetrievalAddTemperature`
      - Add atmospheric temperature to the retrieval setup.
    * - Method
      - :func:`~pyarts.workspace.Workspace.RetrievalAddWindField`
      - Add species VMR to the retrieval setup.
    * - Method
      - :func:`~pyarts.workspace.Workspace.RetrievalFinalizeDiagonal`
      - Add species VMR to the retrieval setup.
    * - Method
      - :func:`~pyarts.workspace.Workspace.RetrievalInit`
      - Initialize the retrieval setup.
    * - Method
      - :func:`~pyarts.workspace.Workspace.SpectralFluxDisort`
      - Integrate Disort spectral radiance.
    * - Method
      - :func:`~pyarts.workspace.Workspace.Touch`
      - As :func:`~pyarts.workspace.Workspace.Ignore` but for agenda output.
    * - Method
      - :func:`~pyarts.workspace.Workspace.UpdateModelStates`
      - Update state of the model in preparation for a forward model run
    * - Method
      - :func:`~pyarts.workspace.Workspace.WignerInit`
      - Initialize the Wigner tables
    * - Method
      - :func:`~pyarts.workspace.Workspace.WignerUnload`
      - Unloads the Wigner tables from static data (see :func:`~pyarts.workspace.Workspace.WignerInit`)
    * - Method
      - :func:`~pyarts.workspace.Workspace.WriteBuiltinPartitionFunctionsXML`
      - Writes all the builtin partition functions to file.
    * - Method
      - :func:`~pyarts.workspace.Workspace.WriteXML`
      - Writes a workspace variable to an XML file.
    * - Method
      - :func:`~pyarts.workspace.Workspace.WriteXMLIndexed`
      - As :func:`~pyarts.workspace.Workspace.WriteXML`, but creates indexed file names.
    * - Method
      - :func:`~pyarts.workspace.Workspace.abs_lines_per_speciesReadSpeciesSplitCatalog`
      - Reads old style catalog but only for :attr:`~pyarts.workspace.Workspace.absorption_species`
    * - Method
      - :func:`~pyarts.workspace.Workspace.absorption_bandsFromAbsorbtionLines`
      - Gets modern line catalog from old style
    * - Method
      - :func:`~pyarts.workspace.Workspace.absorption_bandsFromModelState`
      - Sets :attr:`~pyarts.workspace.Workspace.absorption_bands` to the state of the model.
    * - Method
      - :func:`~pyarts.workspace.Workspace.absorption_bandsKeepID`
      - Keeps first band of ID
    * - Method
      - :func:`~pyarts.workspace.Workspace.absorption_bandsReadSpeciesSplitCatalog`
      - Saves all bands fin :attr:`~pyarts.workspace.Workspace.absorption_bands` to a directory
    * - Method
      - :func:`~pyarts.workspace.Workspace.absorption_bandsReadSplit`
      - Saves all bands fin :attr:`~pyarts.workspace.Workspace.absorption_bands` to a directory
    * - Method
      - :func:`~pyarts.workspace.Workspace.absorption_bandsRemoveID`
      - Remove first band of with a matching ID
    * - Method
      - :func:`~pyarts.workspace.Workspace.absorption_bandsSaveSplit`
      - Saves all bands fin :attr:`~pyarts.workspace.Workspace.absorption_bands` to a directory
    * - Method
      - :func:`~pyarts.workspace.Workspace.absorption_bandsSelectFrequency`
      - Remove all lines/bands that strictly falls outside a frequency range
    * - Method
      - :func:`~pyarts.workspace.Workspace.absorption_bandsSetZeeman`
      - Set the Zeeman splitting for lines within the frequency range
    * - Method
      - :func:`~pyarts.workspace.Workspace.absorption_cia_dataAddCIARecord`
      - Takes CIARecord as input and appends the results in the appropriate place.
    * - Method
      - :func:`~pyarts.workspace.Workspace.absorption_cia_dataReadFromCIA`
      - Read data from a CIA data file for all CIA molecules defined
    * - Method
      - :func:`~pyarts.workspace.Workspace.absorption_cia_dataReadFromXML`
      - Read data from a CIA XML file and check that all CIA tags defined
    * - Method
      - :func:`~pyarts.workspace.Workspace.absorption_cia_dataReadSpeciesSplitCatalog`
      - Reads a species split CIA dataset.
    * - Method
      - :func:`~pyarts.workspace.Workspace.absorption_predefined_model_dataAddWaterMTCKD400`
      - Sets the data for MT CKD 4.0 Water model
    * - Method
      - :func:`~pyarts.workspace.Workspace.absorption_predefined_model_dataInit`
      - Initialize the predefined model data
    * - Method
      - :func:`~pyarts.workspace.Workspace.absorption_predefined_model_dataReadSpeciesSplitCatalog`
      - Reads :attr:`~pyarts.workspace.Workspace.absorption_predefined_model_data` catalog but only for :attr:`~pyarts.workspace.Workspace.absorption_species`
    * - Method
      - :func:`~pyarts.workspace.Workspace.absorption_speciesDefineAll`
      - Sets :attr:`~pyarts.workspace.Workspace.absorption_species` [i][0] to all species in ARTS
    * - Method
      - :func:`~pyarts.workspace.Workspace.absorption_speciesSet`
      - Set up a list of absorption species tag groups.
    * - Method
      - :func:`~pyarts.workspace.Workspace.absorption_xsec_fit_dataReadSpeciesSplitCatalog`
      - Reads HITRAN Crosssection coefficients
    * - Method
      - :func:`~pyarts.workspace.Workspace.atmospheric_fieldAppendAbsorptionData`
      - Append data to the atmospheric field based all absorption data
    * - Method
      - :func:`~pyarts.workspace.Workspace.atmospheric_fieldAppendBaseData`
      - Append base data to the atmospheric field
    * - Method
      - :func:`~pyarts.workspace.Workspace.atmospheric_fieldAppendCIASpeciesData`
      - Append species data to the atmospheric field based on collision-induced data data
    * - Method
      - :func:`~pyarts.workspace.Workspace.atmospheric_fieldAppendLineIsotopologueData`
      - Append isotopologue data to the atmospheric field based on line data
    * - Method
      - :func:`~pyarts.workspace.Workspace.atmospheric_fieldAppendLineLevelData`
      - Append NLTE data to the atmospheric field based on line data
    * - Method
      - :func:`~pyarts.workspace.Workspace.atmospheric_fieldAppendLineSpeciesData`
      - Append species data to the atmospheric field based on line data
    * - Method
      - :func:`~pyarts.workspace.Workspace.atmospheric_fieldAppendPredefSpeciesData`
      - Append species data to the atmospheric field based on predefined model data
    * - Method
      - :func:`~pyarts.workspace.Workspace.atmospheric_fieldAppendTagsSpeciesData`
      - Append species data to the atmospheric field based on species data
    * - Method
      - :func:`~pyarts.workspace.Workspace.atmospheric_fieldAppendXsecSpeciesData`
      - Append species data to the atmospheric field based on cross-section data
    * - Method
      - :func:`~pyarts.workspace.Workspace.atmospheric_fieldFromModelState`
      - Sets :attr:`~pyarts.workspace.Workspace.atmospheric_field` to the state of the model.
    * - Method
      - :func:`~pyarts.workspace.Workspace.atmospheric_fieldHydrostaticPressure`
      - Add the hydrostatic pressure to the atmospheric field
    * - Method
      - :func:`~pyarts.workspace.Workspace.atmospheric_fieldIGRF`
      - Use IGRF to compute the magnetic field at each point.
    * - Method
      - :func:`~pyarts.workspace.Workspace.atmospheric_fieldInit`
      - Initialize the atmospheric field with some altitude and isotopologue ratios
    * - Method
      - :func:`~pyarts.workspace.Workspace.atmospheric_fieldRead`
      - Reads absorption file from a directory
    * - Method
      - :func:`~pyarts.workspace.Workspace.atmospheric_pointInit`
      - Initialize an atmospheric point with some isotopologue ratios
    * - Method
      - :func:`~pyarts.workspace.Workspace.disort_settingsCosmicMicrowaveBackgroundRadiation`
      - Space radiation into Disort is isotropic cosmic background radiation.
    * - Method
      - :func:`~pyarts.workspace.Workspace.disort_settingsInit`
      - Perform Disort calculations for spectral flux.
    * - Method
      - :func:`~pyarts.workspace.Workspace.disort_settingsLayerThermalEmissionLinearInTau`
      - Use a source function that changes linearly in optical thickness.
    * - Method
      - :func:`~pyarts.workspace.Workspace.disort_settingsNoFractionalScattering`
      - Turns off fractional scattering in Disort calculations.
    * - Method
      - :func:`~pyarts.workspace.Workspace.disort_settingsNoLayerThermalEmission`
      - Turns off source radiation in Disort calculations.
    * - Method
      - :func:`~pyarts.workspace.Workspace.disort_settingsNoLegendre`
      - Turns off Legendre coefficients in Disort calculations.
    * - Method
      - :func:`~pyarts.workspace.Workspace.disort_settingsNoSingleScatteringAlbedo`
      - Turns off single albedo scattering in Disort calculations.
    * - Method
      - :func:`~pyarts.workspace.Workspace.disort_settingsNoSpaceEmission`
      - Turns off boundary condition from space for Disort calculations.
    * - Method
      - :func:`~pyarts.workspace.Workspace.disort_settingsNoSun`
      - Turns off solar radiation in Disort calculations.
    * - Method
      - :func:`~pyarts.workspace.Workspace.disort_settingsNoSurfaceEmission`
      - Turns boundary condition from surface for Disort calculations.
    * - Method
      - :func:`~pyarts.workspace.Workspace.disort_settingsNoSurfaceScattering`
      - Turns off BDRF in Disort calculations.
    * - Method
      - :func:`~pyarts.workspace.Workspace.disort_settingsOpticalThicknessFromPath`
      - Get optical thickness from path.
    * - Method
      - :func:`~pyarts.workspace.Workspace.disort_settingsSetSun`
      - Uses Set the FOV to the sun input for Disort calculations.
    * - Method
      - :func:`~pyarts.workspace.Workspace.disort_settingsSurfaceEmissionByTemperature`
      - Surface radiation into Disort is isotropic from surface temperature.
    * - Method
      - :func:`~pyarts.workspace.Workspace.disort_settingsSurfaceLambertian`
      - Turns off BDRF in Disort calculations.
    * - Method
      - :func:`~pyarts.workspace.Workspace.disort_settings_agendaExecute`
      - Executes :attr:`~pyarts.workspace.Workspace.disort_settings_agenda`, see it for more details
    * - Method
      - :func:`~pyarts.workspace.Workspace.disort_settings_agendaSet`
      - Sets :attr:`~pyarts.workspace.Workspace.disort_settings_agenda`
    * - Method
      - :func:`~pyarts.workspace.Workspace.disort_spectral_flux_fieldCalc`
      - Perform Disort calculations for spectral flux.
    * - Method
      - :func:`~pyarts.workspace.Workspace.disort_spectral_flux_fieldClearsky`
      - Use Disort for clearsky calculations of spectral flux field
    * - Method
      - :func:`~pyarts.workspace.Workspace.disort_spectral_flux_fieldFromAgenda`
      - Use Disort for clearsky calculations of spectral flux field
    * - Method
      - :func:`~pyarts.workspace.Workspace.disort_spectral_radiance_fieldCalc`
      - Perform Disort calculations for spectral radiance.
    * - Method
      - :func:`~pyarts.workspace.Workspace.disort_spectral_radiance_fieldClearsky`
      - Use Disort for clearsky calculations of spectral flux field
    * - Method
      - :func:`~pyarts.workspace.Workspace.disort_spectral_radiance_fieldFromAgenda`
      - Use the disort settings agenda to calculate spectral radiance
    * - Method
      - :func:`~pyarts.workspace.Workspace.ecs_dataAddMakarov2020`
      - Sets the O2-66 microwave band data for ECS.
    * - Method
      - :func:`~pyarts.workspace.Workspace.ecs_dataAddMeanAir`
      - Sets ECS data for air from other data if available.
    * - Method
      - :func:`~pyarts.workspace.Workspace.ecs_dataAddRodrigues1997`
      - Sets the CO2-626, CO2-628, and CO2-636 band data for ECS.
    * - Method
      - :func:`~pyarts.workspace.Workspace.ecs_dataAddTran2011`
      - Sets the CO2-626, CO2-628, and CO2-636 band data for ECS.
    * - Method
      - :func:`~pyarts.workspace.Workspace.ecs_dataInit`
      - Resets/initializes the ECS data.
    * - Method
      - :func:`~pyarts.workspace.Workspace.get`
      - Gets the value of the variable with the given name.
    * - Method
      - :func:`~pyarts.workspace.Workspace.gravity_operatorCentralMass`
      - Sets a gravity operator from the gravitational constant and the mass of the planet
    * - Method
      - :func:`~pyarts.workspace.Workspace.has`
      - Checks if the workspace contains the variable.
    * - Method
      - :func:`~pyarts.workspace.Workspace.init`
      - Initiate the variable to the named type.
    * - Method
      - :func:`~pyarts.workspace.Workspace.inversion_iterate_agendaExecute`
      - Executes :attr:`~pyarts.workspace.Workspace.inversion_iterate_agenda`, see it for more details
    * - Method
      - :func:`~pyarts.workspace.Workspace.jacobian_targetsAddAtmosphere`
      - Sets an atmospheric target
    * - Method
      - :func:`~pyarts.workspace.Workspace.jacobian_targetsAddMagneticField`
      - Set magnetic field derivative
    * - Method
      - :func:`~pyarts.workspace.Workspace.jacobian_targetsAddPressure`
      - Set pressure derivative
    * - Method
      - :func:`~pyarts.workspace.Workspace.jacobian_targetsAddSpeciesIsotopologueRatio`
      - Set isotopologue ratio derivative
    * - Method
      - :func:`~pyarts.workspace.Workspace.jacobian_targetsAddSpeciesVMR`
      - Set volume mixing ratio derivative
    * - Method
      - :func:`~pyarts.workspace.Workspace.jacobian_targetsAddSurface`
      - Sets a surface target
    * - Method
      - :func:`~pyarts.workspace.Workspace.jacobian_targetsAddTemperature`
      - Set temperature derivative
    * - Method
      - :func:`~pyarts.workspace.Workspace.jacobian_targetsAddWindField`
      - Set wind field derivative
    * - Method
      - :func:`~pyarts.workspace.Workspace.jacobian_targetsFinalize`
      - Finalize :attr:`~pyarts.workspace.Workspace.jacobian_targets` for use in RT methods
    * - Method
      - :func:`~pyarts.workspace.Workspace.jacobian_targetsInit`
      - Initialize or reset the :attr:`~pyarts.workspace.Workspace.jacobian_targets`
    * - Method
      - :func:`~pyarts.workspace.Workspace.measurement_averaging_kernelCalc`
      - Calculate the averaging kernel matrix.
    * - Method
      - :func:`~pyarts.workspace.Workspace.measurement_sensorGaussian`
      - Sets a sensor with a Gaussian channel opening on a computed frequency grid
    * - Method
      - :func:`~pyarts.workspace.Workspace.measurement_sensorGaussianFrequencyGrid`
      - Sets a sensor with a Gaussian channel opening on a fixed frequency grid
    * - Method
      - :func:`~pyarts.workspace.Workspace.measurement_sensorSimple`
      - Sets a simple sensor
    * - Method
      - :func:`~pyarts.workspace.Workspace.measurement_vectorFromOperatorPath`
      - Sets measurement vector by looping over all sensor elements
    * - Method
      - :func:`~pyarts.workspace.Workspace.measurement_vectorFromSensor`
      - Sets measurement vector by looping over all sensor elements
    * - Method
      - :func:`~pyarts.workspace.Workspace.measurement_vector_error_covariance_matrixConstant`
      - Sets a constant measurement vector error covariance matrix.
    * - Method
      - :func:`~pyarts.workspace.Workspace.measurement_vector_error_covariance_matrix_observation_systemCalc`
      - Calculates the covariance matrix describing the error due to uncertainties
    * - Method
      - :func:`~pyarts.workspace.Workspace.measurement_vector_fittedFromMeasurement`
      - Sets the fitted measurement vector to the current measurement vector.
    * - Method
      - :func:`~pyarts.workspace.Workspace.model_state_covariance_matrixAddSpeciesVMR`
      - Set a species model state covariance matrix element.
    * - Method
      - :func:`~pyarts.workspace.Workspace.model_state_covariance_matrixInit`
      - Initialises the model state covariance matrix to the identity matrix.
    * - Method
      - :func:`~pyarts.workspace.Workspace.model_state_covariance_matrix_smoothing_errorCalc`
      - Calculates the covariance matrix describing the error due to smoothing.
    * - Method
      - :func:`~pyarts.workspace.Workspace.model_state_vectorFromAtmosphere`
      - Sets :attr:`~pyarts.workspace.Workspace.model_state_vector`'s atmospheric part.
    * - Method
      - :func:`~pyarts.workspace.Workspace.model_state_vectorFromBands`
      - Sets :attr:`~pyarts.workspace.Workspace.model_state_vector`'s absorption line part.
    * - Method
      - :func:`~pyarts.workspace.Workspace.model_state_vectorFromData`
      - Get :attr:`~pyarts.workspace.Workspace.model_state_vector` from available data
    * - Method
      - :func:`~pyarts.workspace.Workspace.model_state_vectorFromSurface`
      - Sets :attr:`~pyarts.workspace.Workspace.model_state_vector`'s surface part.
    * - Method
      - :func:`~pyarts.workspace.Workspace.model_state_vectorSize`
      - Sets :attr:`~pyarts.workspace.Workspace.model_state_vector` to the size :attr:`~pyarts.workspace.Workspace.jacobian_targets` demand.
    * - Method
      - :func:`~pyarts.workspace.Workspace.model_state_vectorZero`
      - Sets :attr:`~pyarts.workspace.Workspace.model_state_vector` to 0.0
    * - Method
      - :func:`~pyarts.workspace.Workspace.model_state_vector_aprioriFromData`
      - Get :attr:`~pyarts.workspace.Workspace.model_state_vector_apriori` from available data
    * - Method
      - :func:`~pyarts.workspace.Workspace.model_state_vector_aprioriFromState`
      - Sets the a priori state of the model state vector to the current state.
    * - Method
      - :func:`~pyarts.workspace.Workspace.propagation_matrixAddCIA`
      - Calculate absorption coefficients per tag group for HITRAN CIA continua.
    * - Method
      - :func:`~pyarts.workspace.Workspace.propagation_matrixAddFaraday`
      - Calculates absorption matrix describing Faraday rotation.
    * - Method
      - :func:`~pyarts.workspace.Workspace.propagation_matrixAddLines`
      - Modern line-by-line calculations
    * - Method
      - :func:`~pyarts.workspace.Workspace.propagation_matrixAddPredefined`
      - Adds all of the predefined models in :attr:`~pyarts.workspace.Workspace.absorption_species` to the propagation_matrix
    * - Method
      - :func:`~pyarts.workspace.Workspace.propagation_matrixAddXsecFit`
      - Calculate absorption cross sections per tag group for HITRAN xsec species.
    * - Method
      - :func:`~pyarts.workspace.Workspace.propagation_matrixInit`
      - Initialize :attr:`~pyarts.workspace.Workspace.propagation_matrix`, :attr:`~pyarts.workspace.Workspace.propagation_matrix_source_vector_nonlte`, and their derivatives to zeroes.
    * - Method
      - :func:`~pyarts.workspace.Workspace.propagation_matrix_agendaAuto`
      - Sets the :attr:`~pyarts.workspace.Workspace.propagation_matrix_agenda` automatically
    * - Method
      - :func:`~pyarts.workspace.Workspace.propagation_matrix_agendaExecute`
      - Executes :attr:`~pyarts.workspace.Workspace.propagation_matrix_agenda`, see it for more details
    * - Method
      - :func:`~pyarts.workspace.Workspace.propagation_matrix_agendaSet`
      - Sets :attr:`~pyarts.workspace.Workspace.propagation_matrix_agenda` to a default value
    * - Method
      - :func:`~pyarts.workspace.Workspace.propagation_matrix_scatteringAirSimple`
      - Add simple air to :attr:`~pyarts.workspace.Workspace.propagation_matrix_scattering`.
    * - Method
      - :func:`~pyarts.workspace.Workspace.propagation_matrix_scatteringInit`
      - Initialize :attr:`~pyarts.workspace.Workspace.propagation_matrix_scattering` to zeroes.
    * - Method
      - :func:`~pyarts.workspace.Workspace.propagation_matrix_scattering_agendaExecute`
      - Executes :attr:`~pyarts.workspace.Workspace.propagation_matrix_scattering_agenda`, see it for more details
    * - Method
      - :func:`~pyarts.workspace.Workspace.propagation_matrix_scattering_agendaSet`
      - Sets :attr:`~pyarts.workspace.Workspace.propagation_matrix_scattering_agenda` to a default value
    * - Method
      - :func:`~pyarts.workspace.Workspace.ray_pathGeometric`
      - Get a geometric radiation path
    * - Method
      - :func:`~pyarts.workspace.Workspace.ray_pathGeometricDownlooking`
      - Wraps :func:`~pyarts.workspace.Workspace.ray_pathGeometric` for straight downlooking paths from the top-of-the-atmosphere altitude
    * - Method
      - :func:`~pyarts.workspace.Workspace.ray_pathGeometricTangentAltitude`
      - Get a geometric radiation path that crosses the tangent altitude
    * - Method
      - :func:`~pyarts.workspace.Workspace.ray_pathGeometricUplooking`
      - Wraps :func:`~pyarts.workspace.Workspace.ray_pathGeometric` for straight uplooking paths from the surface altitude at the position
    * - Method
      - :func:`~pyarts.workspace.Workspace.ray_path_atmospheric_pointFromPath`
      - Gets the atmospheric points along the path.
    * - Method
      - :func:`~pyarts.workspace.Workspace.ray_path_frequency_gridFromPath`
      - Gets the frequency grid along the path.
    * - Method
      - :func:`~pyarts.workspace.Workspace.ray_path_observer_agendaExecute`
      - Executes :attr:`~pyarts.workspace.Workspace.ray_path_observer_agenda`, see it for more details
    * - Method
      - :func:`~pyarts.workspace.Workspace.ray_path_observer_agendaSet`
      - Sets :attr:`~pyarts.workspace.Workspace.ray_path_observer_agenda`
    * - Method
      - :func:`~pyarts.workspace.Workspace.ray_path_pointBackground`
      - Sets :attr:`~pyarts.workspace.Workspace.ray_path_point` to the expected background point of :attr:`~pyarts.workspace.Workspace.ray_path`
    * - Method
      - :func:`~pyarts.workspace.Workspace.ray_path_pointForeground`
      - Sets :attr:`~pyarts.workspace.Workspace.ray_path_point` to the expected foreground point of :attr:`~pyarts.workspace.Workspace.ray_path`
    * - Method
      - :func:`~pyarts.workspace.Workspace.ray_path_pointLowestFromPath`
      - Sets :attr:`~pyarts.workspace.Workspace.ray_path_point` to the lowest point of :attr:`~pyarts.workspace.Workspace.ray_path`.
    * - Method
      - :func:`~pyarts.workspace.Workspace.ray_path_propagation_matrixAddScattering`
      - Adds the scattering part of the propagation matrix to the rest along the path.
    * - Method
      - :func:`~pyarts.workspace.Workspace.ray_path_propagation_matrixFromPath`
      - Gets the propagation matrix and non-LTE source term along the path.
    * - Method
      - :func:`~pyarts.workspace.Workspace.ray_path_propagation_matrix_scatteringFromPath`
      - Gets the propagation matrix for scattering along the path.
    * - Method
      - :func:`~pyarts.workspace.Workspace.ray_path_spectral_radiance_scatteringSunsFirstOrderRayleigh`
      - Add :attr:`~pyarts.workspace.Workspace.suns` to :attr:`~pyarts.workspace.Workspace.ray_path_spectral_radiance_source`.
    * - Method
      - :func:`~pyarts.workspace.Workspace.ray_path_spectral_radiance_sourceAddScattering`
      - Adds the scattering part of the propagation matrix to the rest along the path.
    * - Method
      - :func:`~pyarts.workspace.Workspace.ray_path_spectral_radiance_sourceFromPropmat`
      - Gets the source term along the path.
    * - Method
      - :func:`~pyarts.workspace.Workspace.ray_path_suns_pathFromPathObserver`
      - Wraps :func:`~pyarts.workspace.Workspace.sun_pathFromObserverAgenda` for all paths to all suns.
    * - Method
      - :func:`~pyarts.workspace.Workspace.ray_path_transmission_matrixFromPath`
      - Gets the transmission matrix in layers along the path.
    * - Method
      - :func:`~pyarts.workspace.Workspace.ray_path_transmission_matrix_cumulativeFromPath`
      - Sets :attr:`~pyarts.workspace.Workspace.ray_path_transmission_matrix_cumulative` by forward iteration of :attr:`~pyarts.workspace.Workspace.ray_path_transmission_matrix`
    * - Method
      - :func:`~pyarts.workspace.Workspace.ray_path_zeeman_magnetic_fieldFromPath`
      - Sets A path of Zeeman effec magnetic field properties.
    * - Method
      - :func:`~pyarts.workspace.Workspace.set`
      - Set the variable to the new value.
    * - Method
      - :func:`~pyarts.workspace.Workspace.sortedIndexOfBands`
      - Get the sorting of the bands by first quantum identifier then some ``criteria``
    * - Method
      - :func:`~pyarts.workspace.Workspace.spectral_radianceApplyUnit`
      - Applies a unit to :attr:`~pyarts.workspace.Workspace.spectral_radiance`, returning a new field
    * - Method
      - :func:`~pyarts.workspace.Workspace.spectral_radianceApplyUnitFromSpectralRadiance`
      - Apply unit changes to spectral radiance and its Jacobian
    * - Method
      - :func:`~pyarts.workspace.Workspace.spectral_radianceClearskyBackgroundTransmission`
      - Computes clearsky transmission of spectral radiances
    * - Method
      - :func:`~pyarts.workspace.Workspace.spectral_radianceClearskyEmission`
      - Computes clearsky emission of spectral radiances
    * - Method
      - :func:`~pyarts.workspace.Workspace.spectral_radianceClearskyRayleighScattering`
      - Computes clearsky emission of spectral radiances
    * - Method
      - :func:`~pyarts.workspace.Workspace.spectral_radianceClearskyTransmission`
      - Computes clearsky transmission of spectral radiances
    * - Method
      - :func:`~pyarts.workspace.Workspace.spectral_radianceCumulativeEmission`
      - Gets the spectral radiance from the path emission.
    * - Method
      - :func:`~pyarts.workspace.Workspace.spectral_radianceCumulativeTransmission`
      - Gets the spectral radiance from the path transmission.
    * - Method
      - :func:`~pyarts.workspace.Workspace.spectral_radianceDefaultTransmission`
      - Sets default :attr:`~pyarts.workspace.Workspace.spectral_radiance` and :attr:`~pyarts.workspace.Workspace.spectral_radiance_jacobian` for transmission.
    * - Method
      - :func:`~pyarts.workspace.Workspace.spectral_radianceIntegrateDisort`
      - Integrate Disort spectral radiance.
    * - Method
      - :func:`~pyarts.workspace.Workspace.spectral_radianceStepByStepEmission`
      - Gets the spectral radiance from the path.
    * - Method
      - :func:`~pyarts.workspace.Workspace.spectral_radianceSunOrCosmicBackground`
      - Get the spectral radiance of a sun or of the cosmic background if the sun is not hit.
    * - Method
      - :func:`~pyarts.workspace.Workspace.spectral_radianceSunsOrCosmicBackground`
      - Get the spectral radiance of a sun or of the cosmic background if no sun is hit.
    * - Method
      - :func:`~pyarts.workspace.Workspace.spectral_radianceSurfaceBlackbody`
      - Set surface spectral radiance from Planck function of the surface temperature
    * - Method
      - :func:`~pyarts.workspace.Workspace.spectral_radianceUniformCosmicBackground`
      - Background spectral radiance is from a uniform cosmic background temperature.
    * - Method
      - :func:`~pyarts.workspace.Workspace.spectral_radiance_backgroundAgendasAtEndOfPath`
      - Computes the background radiation.
    * - Method
      - :func:`~pyarts.workspace.Workspace.spectral_radiance_fieldFromOperatorPath`
      - Computes the spectral radiance field using :attr:`~pyarts.workspace.Workspace.ray_path_observer_agenda`.
    * - Method
      - :func:`~pyarts.workspace.Workspace.spectral_radiance_fieldFromOperatorPlanarGeometric`
      - Computes the spectral radiance field assuming planar geometric paths
    * - Method
      - :func:`~pyarts.workspace.Workspace.spectral_radiance_jacobianAddPathPropagation`
      - Adds the propagation variables to :attr:`~pyarts.workspace.Workspace.spectral_radiance_jacobian`
    * - Method
      - :func:`~pyarts.workspace.Workspace.spectral_radiance_jacobianApplyUnit`
      - Applies a unit to :attr:`~pyarts.workspace.Workspace.spectral_radiance`, returning a new field
    * - Method
      - :func:`~pyarts.workspace.Workspace.spectral_radiance_jacobianEmpty`
      - Set the cosmic background radiation derivative to empty.
    * - Method
      - :func:`~pyarts.workspace.Workspace.spectral_radiance_jacobianFromBackground`
      - Sets :attr:`~pyarts.workspace.Workspace.spectral_radiance_jacobian` from the background values
    * - Method
      - :func:`~pyarts.workspace.Workspace.spectral_radiance_observer_agendaExecute`
      - Executes :attr:`~pyarts.workspace.Workspace.spectral_radiance_observer_agenda`, see it for more details
    * - Method
      - :func:`~pyarts.workspace.Workspace.spectral_radiance_observer_agendaSet`
      - Sets :attr:`~pyarts.workspace.Workspace.spectral_radiance_space_agenda`
    * - Method
      - :func:`~pyarts.workspace.Workspace.spectral_radiance_operatorClearsky1D`
      - Set up a 1D spectral radiance operator
    * - Method
      - :func:`~pyarts.workspace.Workspace.spectral_radiance_space_agendaExecute`
      - Executes :attr:`~pyarts.workspace.Workspace.spectral_radiance_space_agenda`, see it for more details
    * - Method
      - :func:`~pyarts.workspace.Workspace.spectral_radiance_space_agendaSet`
      - Sets :attr:`~pyarts.workspace.Workspace.spectral_radiance_space_agenda`
    * - Method
      - :func:`~pyarts.workspace.Workspace.spectral_radiance_surface_agendaExecute`
      - Executes :attr:`~pyarts.workspace.Workspace.spectral_radiance_surface_agenda`, see it for more details
    * - Method
      - :func:`~pyarts.workspace.Workspace.spectral_radiance_surface_agendaSet`
      - Sets :attr:`~pyarts.workspace.Workspace.spectral_radiance_surface_agenda`
    * - Method
      - :func:`~pyarts.workspace.Workspace.sunBlackbody`
      - Set :attr:`~pyarts.workspace.Workspace.sun` to blackbody.
    * - Method
      - :func:`~pyarts.workspace.Workspace.sunFromGrid`
      - Extracts a sun spectrum from a field of such data.
    * - Method
      - :func:`~pyarts.workspace.Workspace.sun_pathFromObserverAgenda`
      - Find a path that hits the sun if possible
    * - Method
      - :func:`~pyarts.workspace.Workspace.sunsAddSun`
      - Add :attr:`~pyarts.workspace.Workspace.sun` to :attr:`~pyarts.workspace.Workspace.suns`, only exist for composability.
    * - Method
      - :func:`~pyarts.workspace.Workspace.surface_fieldEarth`
      - Earth reference ellipsoids.
    * - Method
      - :func:`~pyarts.workspace.Workspace.surface_fieldEuropa`
      - Europa reference ellipsoids.
    * - Method
      - :func:`~pyarts.workspace.Workspace.surface_fieldFromModelState`
      - Sets :attr:`~pyarts.workspace.Workspace.surface_field` to the state of the model.
    * - Method
      - :func:`~pyarts.workspace.Workspace.surface_fieldGanymede`
      - Ganymede reference ellipsoids.
    * - Method
      - :func:`~pyarts.workspace.Workspace.surface_fieldInit`
      - Manual setting of the reference ellipsoid.
    * - Method
      - :func:`~pyarts.workspace.Workspace.surface_fieldIo`
      - Io reference ellipsoids.
    * - Method
      - :func:`~pyarts.workspace.Workspace.surface_fieldJupiter`
      - Jupiter reference ellipsoids.
    * - Method
      - :func:`~pyarts.workspace.Workspace.surface_fieldMars`
      - Mars reference ellipsoids.
    * - Method
      - :func:`~pyarts.workspace.Workspace.surface_fieldMoon`
      - Moon reference ellipsoids.
    * - Method
      - :func:`~pyarts.workspace.Workspace.surface_fieldSetPlanetEllipsoid`
      - Sets the planet base surface field
    * - Method
      - :func:`~pyarts.workspace.Workspace.surface_fieldVenus`
      - Venus reference ellipsoids.
    * - Method
      - :func:`~pyarts.workspace.Workspace.swap`
      - Swap the workspace for andother.
    * - Method
      - :func:`~pyarts.workspace.Workspace.transmission_matrix_backgroundFromPathPropagationBack`
      - Sets :attr:`~pyarts.workspace.Workspace.transmission_matrix_background` to back of :attr:`~pyarts.workspace.Workspace.ray_path_transmission_matrix_cumulative`
    * - Method
      - :func:`~pyarts.workspace.Workspace.transmission_matrix_backgroundFromPathPropagationFront`
      - Sets :attr:`~pyarts.workspace.Workspace.transmission_matrix_background` to front of :attr:`~pyarts.workspace.Workspace.ray_path_transmission_matrix_cumulative`
    * - Method
      - :func:`~pyarts.workspace.Workspace.water_equivalent_pressure_operatorMK05`
      - Calculate equivalent water pressure according to Murphy and Koop, 2005
    * - Attribute
      - :attr:`~pyarts.workspace.Workspace.absorption_bands`
      - :class:`~pyarts.arts.ArrayOfAbsorptionBand` Bands of absorption lines for LBL calculations.
    * - Attribute
      - :attr:`~pyarts.workspace.Workspace.absorption_cia_data`
      - :class:`~pyarts.arts.ArrayOfCIARecord` HITRAN Collision Induced Absorption (CIA) Data.
    * - Attribute
      - :attr:`~pyarts.workspace.Workspace.absorption_predefined_model_data`
      - :class:`~pyarts.arts.PredefinedModelData` This contains predefined model data.
    * - Attribute
      - :attr:`~pyarts.workspace.Workspace.absorption_species`
      - :class:`~pyarts.arts.ArrayOfArrayOfSpeciesTag` Tag groups for gas absorption.
    * - Attribute
      - :attr:`~pyarts.workspace.Workspace.absorption_xsec_fit_data`
      - :class:`~pyarts.arts.ArrayOfXsecRecord` Fitting model coefficients for cross section species.
    * - Attribute
      - :attr:`~pyarts.workspace.Workspace.atmospheric_field`
      - :class:`~pyarts.arts.AtmField` An atmospheric field in ARTS.
    * - Attribute
      - :attr:`~pyarts.workspace.Workspace.atmospheric_point`
      - :class:`~pyarts.arts.AtmPoint` An atmospheric point in ARTS.
    * - Attribute
      - :attr:`~pyarts.workspace.Workspace.covariance_matrix_diagonal_blocks`
      - :class:`~pyarts.arts.JacobianTargetsDiagonalCovarianceMatrixMap` A helper map for setting the covariance matrix.
    * - Attribute
      - :attr:`~pyarts.workspace.Workspace.disort_fourier_mode_dimension`
      - :class:`~pyarts.arts.Index` The number of Fourier modes for Disort.
    * - Attribute
      - :attr:`~pyarts.workspace.Workspace.disort_legendre_polynomial_dimension`
      - :class:`~pyarts.arts.Index` The number of input Legendre polynimials for Disort.
    * - Attribute
      - :attr:`~pyarts.workspace.Workspace.disort_quadrature_angles`
      - :class:`~pyarts.arts.Vector` The quadrature angles for Disort.
    * - Attribute
      - :attr:`~pyarts.workspace.Workspace.disort_quadrature_dimension`
      - :class:`~pyarts.arts.Index` The quadrature size for Disort.
    * - Attribute
      - :attr:`~pyarts.workspace.Workspace.disort_quadrature_weights`
      - :class:`~pyarts.arts.Vector` The quadrature weights for Disort.
    * - Attribute
      - :attr:`~pyarts.workspace.Workspace.disort_settings`
      - :class:`~pyarts.arts.DisortSettings` Contains the full settings of spectral Disort calculations.
    * - Attribute
      - :attr:`~pyarts.workspace.Workspace.disort_settings_agenda`
      - :class:`~pyarts.arts.Agenda` An agenda for setting up Disort.
    * - Attribute
      - :attr:`~pyarts.workspace.Workspace.disort_spectral_flux_field`
      - :class:`~pyarts.arts.Tensor3` The spectral flux field from Disort.
    * - Attribute
      - :attr:`~pyarts.workspace.Workspace.disort_spectral_radiance_field`
      - :class:`~pyarts.arts.Tensor4` The spectral radiance field from Disort.
    * - Attribute
      - :attr:`~pyarts.workspace.Workspace.ecs_data`
      - :class:`~pyarts.arts.LinemixingEcsData` Error corrected sudden data
    * - Attribute
      - :attr:`~pyarts.workspace.Workspace.frequency_grid`
      - :class:`~pyarts.arts.AscendingGrid` The discrete frequency grid.
    * - Attribute
      - :attr:`~pyarts.workspace.Workspace.gravity_operator`
      - :class:`~pyarts.arts.NumericTernaryOperator` The gravity operator.
    * - Attribute
      - :attr:`~pyarts.workspace.Workspace.inversion_iterate_agenda`
      - :class:`~pyarts.arts.Agenda` Work in progress ...
    * - Attribute
      - :attr:`~pyarts.workspace.Workspace.inversion_iterate_agenda_counter`
      - :class:`~pyarts.arts.Index` A counter for the inversion iterate agenda.
    * - Attribute
      - :attr:`~pyarts.workspace.Workspace.inversion_iterate_agenda_do_jacobian`
      - :class:`~pyarts.arts.Index` A boolean for if Jacobian calculations should be done.
    * - Attribute
      - :attr:`~pyarts.workspace.Workspace.jacobian_targets`
      - :class:`~pyarts.arts.JacobianTargets` A list of targets for the Jacobian Matrix calculations.
    * - Attribute
      - :attr:`~pyarts.workspace.Workspace.measurement_averaging_kernel`
      - :class:`~pyarts.arts.Matrix` Averaging kernel matrix.
    * - Attribute
      - :attr:`~pyarts.workspace.Workspace.measurement_gain_matrix`
      - :class:`~pyarts.arts.Matrix` Contribution function (or gain) matrix.
    * - Attribute
      - :attr:`~pyarts.workspace.Workspace.measurement_jacobian`
      - :class:`~pyarts.arts.Matrix` The partial derivatives of the :attr:`~pyarts.workspace.Workspace.measurement_vector`.
    * - Attribute
      - :attr:`~pyarts.workspace.Workspace.measurement_sensor`
      - :class:`~pyarts.arts.ArrayOfSensorObsel` A list of sensor elements.
    * - Attribute
      - :attr:`~pyarts.workspace.Workspace.measurement_vector`
      - :class:`~pyarts.arts.Vector` The measurment vector for, e.g., a sensor.
    * - Attribute
      - :attr:`~pyarts.workspace.Workspace.measurement_vector_error_covariance_matrix`
      - :class:`~pyarts.arts.CovarianceMatrix` Covariance matrix for observation uncertainties.
    * - Attribute
      - :attr:`~pyarts.workspace.Workspace.measurement_vector_fitted`
      - :class:`~pyarts.arts.Vector` As :attr:`~pyarts.workspace.Workspace.measurement_vector`, but fitted to the model.
    * - Attribute
      - :attr:`~pyarts.workspace.Workspace.model_state_covariance_matrix`
      - :class:`~pyarts.arts.CovarianceMatrix` Covariance matrix of a priori distribution.
    * - Attribute
      - :attr:`~pyarts.workspace.Workspace.model_state_vector`
      - :class:`~pyarts.arts.Vector` A state vector of the model.
    * - Attribute
      - :attr:`~pyarts.workspace.Workspace.model_state_vector_apriori`
      - :class:`~pyarts.arts.Vector` An apriori state vector of the model.
    * - Attribute
      - :attr:`~pyarts.workspace.Workspace.propagation_matrix`
      - :class:`~pyarts.arts.PropmatVector` This contains the propagation matrix for the current path point.
    * - Attribute
      - :attr:`~pyarts.workspace.Workspace.propagation_matrix_agenda`
      - :class:`~pyarts.arts.Agenda` Compute the propagation matrix, the non-LTE source vector, and their derivatives
    * - Attribute
      - :attr:`~pyarts.workspace.Workspace.propagation_matrix_jacobian`
      - :class:`~pyarts.arts.PropmatMatrix` 
    * - Attribute
      - :attr:`~pyarts.workspace.Workspace.propagation_matrix_scattering`
      - :class:`~pyarts.arts.PropmatVector` This contains the propagation matrix for scattering for the current path point.
    * - Attribute
      - :attr:`~pyarts.workspace.Workspace.propagation_matrix_scattering_agenda`
      - :class:`~pyarts.arts.Agenda` Compute the propagation matrix, the non-LTE source vector, and their derivatives
    * - Attribute
      - :attr:`~pyarts.workspace.Workspace.propagation_matrix_select_species`
      - :class:`~pyarts.arts.SpeciesEnum` A select species tag group from :attr:`~pyarts.workspace.Workspace.absorption_species`
    * - Attribute
      - :attr:`~pyarts.workspace.Workspace.propagation_matrix_source_vector_nonlte`
      - :class:`~pyarts.arts.StokvecVector` The part of the source vector that is due to non-LTE.
    * - Attribute
      - :attr:`~pyarts.workspace.Workspace.propagation_matrix_source_vector_nonlte_jacobian`
      - :class:`~pyarts.arts.StokvecMatrix` Partial derivative of the :attr:`~pyarts.workspace.Workspace.propagation_matrix_source_vector_nonlte` with regards to :attr:`~pyarts.workspace.Workspace.jacobian_targets`.
    * - Attribute
      - :attr:`~pyarts.workspace.Workspace.ray_path`
      - :class:`~pyarts.arts.ArrayOfPropagationPathPoint` A list path points making up a propagation path.
    * - Attribute
      - :attr:`~pyarts.workspace.Workspace.ray_path_atmospheric_point`
      - :class:`~pyarts.arts.ArrayOfAtmPoint` Atmospheric points along the propagation path.
    * - Attribute
      - :attr:`~pyarts.workspace.Workspace.ray_path_frequency_grid`
      - :class:`~pyarts.arts.ArrayOfAscendingGrid` Atmospheric frequency grids along the propagation path.
    * - Attribute
      - :attr:`~pyarts.workspace.Workspace.ray_path_observer_agenda`
      - :class:`~pyarts.arts.Agenda` Get the propagation path as it is obeserved.
    * - Attribute
      - :attr:`~pyarts.workspace.Workspace.ray_path_point`
      - :class:`~pyarts.arts.PropagationPathPoint` A single path point.
    * - Attribute
      - :attr:`~pyarts.workspace.Workspace.ray_path_propagation_matrix`
      - :class:`~pyarts.arts.ArrayOfPropmatVector` Propagation matrices along the propagation path
    * - Attribute
      - :attr:`~pyarts.workspace.Workspace.ray_path_propagation_matrix_jacobian`
      - :class:`~pyarts.arts.ArrayOfPropmatMatrix` Propagation derivative matrices along the propagation path
    * - Attribute
      - :attr:`~pyarts.workspace.Workspace.ray_path_propagation_matrix_scattering`
      - :class:`~pyarts.arts.ArrayOfPropmatVector` Propagation matrices along the propagation path for scattering
    * - Attribute
      - :attr:`~pyarts.workspace.Workspace.ray_path_propagation_matrix_source_vector_nonlte`
      - :class:`~pyarts.arts.ArrayOfStokvecVector` Additional non-LTE along the propagation path
    * - Attribute
      - :attr:`~pyarts.workspace.Workspace.ray_path_propagation_matrix_source_vector_nonlte_jacobian`
      - :class:`~pyarts.arts.ArrayOfStokvecMatrix` Additional non-LTE derivative along the propagation path
    * - Attribute
      - :attr:`~pyarts.workspace.Workspace.ray_path_spectral_radiance_jacobian`
      - :class:`~pyarts.arts.ArrayOfStokvecMatrix` Spectral radiance derivative along the propagation path
    * - Attribute
      - :attr:`~pyarts.workspace.Workspace.ray_path_spectral_radiance_scattering`
      - :class:`~pyarts.arts.ArrayOfStokvecVector` Spectral radiance scattered into the propagation path
    * - Attribute
      - :attr:`~pyarts.workspace.Workspace.ray_path_spectral_radiance_source`
      - :class:`~pyarts.arts.ArrayOfStokvecVector` Source vectors along the propagation path
    * - Attribute
      - :attr:`~pyarts.workspace.Workspace.ray_path_spectral_radiance_source_jacobian`
      - :class:`~pyarts.arts.ArrayOfStokvecMatrix` Source derivative vectors along the propagation path
    * - Attribute
      - :attr:`~pyarts.workspace.Workspace.ray_path_suns_path`
      - :class:`~pyarts.arts.ArrayOfArrayOfArrayOfPropagationPathPoint` A list of paths to the suns from the ray path.
    * - Attribute
      - :attr:`~pyarts.workspace.Workspace.ray_path_transmission_matrix`
      - :class:`~pyarts.arts.ArrayOfMuelmatVector` Transmission matrices along the propagation path.
    * - Attribute
      - :attr:`~pyarts.workspace.Workspace.ray_path_transmission_matrix_cumulative`
      - :class:`~pyarts.arts.ArrayOfMuelmatVector` Cumulative transmission matrices along the propagation path
    * - Attribute
      - :attr:`~pyarts.workspace.Workspace.ray_path_transmission_matrix_jacobian`
      - :class:`~pyarts.arts.ArrayOfMuelmatTensor3` Transmission derivative matrices along the propagation path.
    * - Attribute
      - :attr:`~pyarts.workspace.Workspace.spectral_radiance`
      - :class:`~pyarts.arts.StokvecVector` A spectral radiance vector.
    * - Attribute
      - :attr:`~pyarts.workspace.Workspace.spectral_radiance_background`
      - :class:`~pyarts.arts.StokvecVector` Spectral radiance from the background
    * - Attribute
      - :attr:`~pyarts.workspace.Workspace.spectral_radiance_background_jacobian`
      - :class:`~pyarts.arts.StokvecMatrix` Spectral radiance derivative from the background
    * - Attribute
      - :attr:`~pyarts.workspace.Workspace.spectral_radiance_jacobian`
      - :class:`~pyarts.arts.StokvecMatrix` Jacobian of :attr:`~pyarts.workspace.Workspace.spectral_radiance` with respect to :attr:`~pyarts.workspace.Workspace.jacobian_targets`.
    * - Attribute
      - :attr:`~pyarts.workspace.Workspace.spectral_radiance_observer_agenda`
      - :class:`~pyarts.arts.Agenda` Spectral radiance as seen from the input position and environment
    * - Attribute
      - :attr:`~pyarts.workspace.Workspace.spectral_radiance_observer_line_of_sight`
      - :class:`~pyarts.arts.Vector2` The position of the observer of spectral radiance.
    * - Attribute
      - :attr:`~pyarts.workspace.Workspace.spectral_radiance_observer_position`
      - :class:`~pyarts.arts.Vector3` The position of an observer of spectral radiance.
    * - Attribute
      - :attr:`~pyarts.workspace.Workspace.spectral_radiance_operator`
      - :class:`~pyarts.arts.SpectralRadianceOperator` The spectral radiance operator.
    * - Attribute
      - :attr:`~pyarts.workspace.Workspace.spectral_radiance_space_agenda`
      - :class:`~pyarts.arts.Agenda` Spectral radiance as seen of space.
    * - Attribute
      - :attr:`~pyarts.workspace.Workspace.spectral_radiance_surface_agenda`
      - :class:`~pyarts.arts.Agenda` Spectral radiance as seen of the surface.
    * - Attribute
      - :attr:`~pyarts.workspace.Workspace.spectral_radiance_unit`
      - :class:`~pyarts.arts.String` The spectral radiance unit after conversion.
    * - Attribute
      - :attr:`~pyarts.workspace.Workspace.sun`
      - :class:`~pyarts.arts.Sun` A sun.
    * - Attribute
      - :attr:`~pyarts.workspace.Workspace.sun_path`
      - :class:`~pyarts.arts.ArrayOfPropagationPathPoint` A path to a sun if it is visible.
    * - Attribute
      - :attr:`~pyarts.workspace.Workspace.suns`
      - :class:`~pyarts.arts.ArrayOfSun` A list of :class:`~pyarts.arts.Sun`.
    * - Attribute
      - :attr:`~pyarts.workspace.Workspace.surface_field`
      - :class:`~pyarts.arts.SurfaceField` The surface field describes the surface properties.
    * - Attribute
      - :attr:`~pyarts.workspace.Workspace.transmission_matrix_background`
      - :class:`~pyarts.arts.MuelmatVector` Transmittance from the background
    * - Operator
      - :func:`~pyarts.workspace.Workspace.__eq__`
      - Return self==value.
    * - Operator
      - :func:`~pyarts.workspace.Workspace.__ge__`
      - Return self>=value.
    * - Operator
      - :func:`~pyarts.workspace.Workspace.__gt__`
      - Return self>value.
    * - Operator
      - :func:`~pyarts.workspace.Workspace.__hash__`
      - Return hash(self).
    * - Operator
      - :func:`~pyarts.workspace.Workspace.__iter__`
      - Allows `iter(self)`
    * - Operator
      - :func:`~pyarts.workspace.Workspace.__le__`
      - Return self<=value.
    * - Operator
      - :func:`~pyarts.workspace.Workspace.__lt__`
      - Return self<value.
    * - Operator
      - :func:`~pyarts.workspace.Workspace.__ne__`
      - Return self!=value.

  .. rubric:: Constructors

  .. automethod:: __init__
     :noindex:

.. toctree::
  :hidden:

  pyarts.workspace.Workspace.Ignore
  pyarts.workspace.Workspace.OEM
  pyarts.workspace.Workspace.ReadCatalogData
  pyarts.workspace.Workspace.ReadXML
  pyarts.workspace.Workspace.ReadXMLIndexed
  pyarts.workspace.Workspace.RetrievalAddAtmosphere
  pyarts.workspace.Workspace.RetrievalAddMagneticField
  pyarts.workspace.Workspace.RetrievalAddPressure
  pyarts.workspace.Workspace.RetrievalAddSpeciesIsotopologueRatio
  pyarts.workspace.Workspace.RetrievalAddSpeciesVMR
  pyarts.workspace.Workspace.RetrievalAddSurface
  pyarts.workspace.Workspace.RetrievalAddTemperature
  pyarts.workspace.Workspace.RetrievalAddWindField
  pyarts.workspace.Workspace.RetrievalFinalizeDiagonal
  pyarts.workspace.Workspace.RetrievalInit
  pyarts.workspace.Workspace.SpectralFluxDisort
  pyarts.workspace.Workspace.Touch
  pyarts.workspace.Workspace.UpdateModelStates
  pyarts.workspace.Workspace.WignerInit
  pyarts.workspace.Workspace.WignerUnload
  pyarts.workspace.Workspace.WriteBuiltinPartitionFunctionsXML
  pyarts.workspace.Workspace.WriteXML
  pyarts.workspace.Workspace.WriteXMLIndexed
  pyarts.workspace.Workspace.abs_lines_per_speciesReadSpeciesSplitCatalog
  pyarts.workspace.Workspace.absorption_bandsFromAbsorbtionLines
  pyarts.workspace.Workspace.absorption_bandsFromModelState
  pyarts.workspace.Workspace.absorption_bandsKeepID
  pyarts.workspace.Workspace.absorption_bandsReadSpeciesSplitCatalog
  pyarts.workspace.Workspace.absorption_bandsReadSplit
  pyarts.workspace.Workspace.absorption_bandsRemoveID
  pyarts.workspace.Workspace.absorption_bandsSaveSplit
  pyarts.workspace.Workspace.absorption_bandsSelectFrequency
  pyarts.workspace.Workspace.absorption_bandsSetZeeman
  pyarts.workspace.Workspace.absorption_cia_dataAddCIARecord
  pyarts.workspace.Workspace.absorption_cia_dataReadFromCIA
  pyarts.workspace.Workspace.absorption_cia_dataReadFromXML
  pyarts.workspace.Workspace.absorption_cia_dataReadSpeciesSplitCatalog
  pyarts.workspace.Workspace.absorption_predefined_model_dataAddWaterMTCKD400
  pyarts.workspace.Workspace.absorption_predefined_model_dataInit
  pyarts.workspace.Workspace.absorption_predefined_model_dataReadSpeciesSplitCatalog
  pyarts.workspace.Workspace.absorption_speciesDefineAll
  pyarts.workspace.Workspace.absorption_speciesSet
  pyarts.workspace.Workspace.absorption_xsec_fit_dataReadSpeciesSplitCatalog
  pyarts.workspace.Workspace.atmospheric_fieldAppendAbsorptionData
  pyarts.workspace.Workspace.atmospheric_fieldAppendBaseData
  pyarts.workspace.Workspace.atmospheric_fieldAppendCIASpeciesData
  pyarts.workspace.Workspace.atmospheric_fieldAppendLineIsotopologueData
  pyarts.workspace.Workspace.atmospheric_fieldAppendLineLevelData
  pyarts.workspace.Workspace.atmospheric_fieldAppendLineSpeciesData
  pyarts.workspace.Workspace.atmospheric_fieldAppendPredefSpeciesData
  pyarts.workspace.Workspace.atmospheric_fieldAppendTagsSpeciesData
  pyarts.workspace.Workspace.atmospheric_fieldAppendXsecSpeciesData
  pyarts.workspace.Workspace.atmospheric_fieldFromModelState
  pyarts.workspace.Workspace.atmospheric_fieldHydrostaticPressure
  pyarts.workspace.Workspace.atmospheric_fieldIGRF
  pyarts.workspace.Workspace.atmospheric_fieldInit
  pyarts.workspace.Workspace.atmospheric_fieldRead
  pyarts.workspace.Workspace.atmospheric_pointInit
  pyarts.workspace.Workspace.disort_settingsCosmicMicrowaveBackgroundRadiation
  pyarts.workspace.Workspace.disort_settingsInit
  pyarts.workspace.Workspace.disort_settingsLayerThermalEmissionLinearInTau
  pyarts.workspace.Workspace.disort_settingsNoFractionalScattering
  pyarts.workspace.Workspace.disort_settingsNoLayerThermalEmission
  pyarts.workspace.Workspace.disort_settingsNoLegendre
  pyarts.workspace.Workspace.disort_settingsNoSingleScatteringAlbedo
  pyarts.workspace.Workspace.disort_settingsNoSpaceEmission
  pyarts.workspace.Workspace.disort_settingsNoSun
  pyarts.workspace.Workspace.disort_settingsNoSurfaceEmission
  pyarts.workspace.Workspace.disort_settingsNoSurfaceScattering
  pyarts.workspace.Workspace.disort_settingsOpticalThicknessFromPath
  pyarts.workspace.Workspace.disort_settingsSetSun
  pyarts.workspace.Workspace.disort_settingsSurfaceEmissionByTemperature
  pyarts.workspace.Workspace.disort_settingsSurfaceLambertian
  pyarts.workspace.Workspace.disort_settings_agendaExecute
  pyarts.workspace.Workspace.disort_settings_agendaSet
  pyarts.workspace.Workspace.disort_spectral_flux_fieldCalc
  pyarts.workspace.Workspace.disort_spectral_flux_fieldClearsky
  pyarts.workspace.Workspace.disort_spectral_flux_fieldFromAgenda
  pyarts.workspace.Workspace.disort_spectral_radiance_fieldCalc
  pyarts.workspace.Workspace.disort_spectral_radiance_fieldClearsky
  pyarts.workspace.Workspace.disort_spectral_radiance_fieldFromAgenda
  pyarts.workspace.Workspace.ecs_dataAddMakarov2020
  pyarts.workspace.Workspace.ecs_dataAddMeanAir
  pyarts.workspace.Workspace.ecs_dataAddRodrigues1997
  pyarts.workspace.Workspace.ecs_dataAddTran2011
  pyarts.workspace.Workspace.ecs_dataInit
  pyarts.workspace.Workspace.get
  pyarts.workspace.Workspace.gravity_operatorCentralMass
  pyarts.workspace.Workspace.has
  pyarts.workspace.Workspace.init
  pyarts.workspace.Workspace.inversion_iterate_agendaExecute
  pyarts.workspace.Workspace.jacobian_targetsAddAtmosphere
  pyarts.workspace.Workspace.jacobian_targetsAddMagneticField
  pyarts.workspace.Workspace.jacobian_targetsAddPressure
  pyarts.workspace.Workspace.jacobian_targetsAddSpeciesIsotopologueRatio
  pyarts.workspace.Workspace.jacobian_targetsAddSpeciesVMR
  pyarts.workspace.Workspace.jacobian_targetsAddSurface
  pyarts.workspace.Workspace.jacobian_targetsAddTemperature
  pyarts.workspace.Workspace.jacobian_targetsAddWindField
  pyarts.workspace.Workspace.jacobian_targetsFinalize
  pyarts.workspace.Workspace.jacobian_targetsInit
  pyarts.workspace.Workspace.measurement_averaging_kernelCalc
  pyarts.workspace.Workspace.measurement_sensorGaussian
  pyarts.workspace.Workspace.measurement_sensorGaussianFrequencyGrid
  pyarts.workspace.Workspace.measurement_sensorSimple
  pyarts.workspace.Workspace.measurement_vectorFromOperatorPath
  pyarts.workspace.Workspace.measurement_vectorFromSensor
  pyarts.workspace.Workspace.measurement_vector_error_covariance_matrixConstant
  pyarts.workspace.Workspace.measurement_vector_error_covariance_matrix_observation_systemCalc
  pyarts.workspace.Workspace.measurement_vector_fittedFromMeasurement
  pyarts.workspace.Workspace.model_state_covariance_matrixAddSpeciesVMR
  pyarts.workspace.Workspace.model_state_covariance_matrixInit
  pyarts.workspace.Workspace.model_state_covariance_matrix_smoothing_errorCalc
  pyarts.workspace.Workspace.model_state_vectorFromAtmosphere
  pyarts.workspace.Workspace.model_state_vectorFromBands
  pyarts.workspace.Workspace.model_state_vectorFromData
  pyarts.workspace.Workspace.model_state_vectorFromSurface
  pyarts.workspace.Workspace.model_state_vectorSize
  pyarts.workspace.Workspace.model_state_vectorZero
  pyarts.workspace.Workspace.model_state_vector_aprioriFromData
  pyarts.workspace.Workspace.model_state_vector_aprioriFromState
  pyarts.workspace.Workspace.propagation_matrixAddCIA
  pyarts.workspace.Workspace.propagation_matrixAddFaraday
  pyarts.workspace.Workspace.propagation_matrixAddLines
  pyarts.workspace.Workspace.propagation_matrixAddPredefined
  pyarts.workspace.Workspace.propagation_matrixAddXsecFit
  pyarts.workspace.Workspace.propagation_matrixInit
  pyarts.workspace.Workspace.propagation_matrix_agendaAuto
  pyarts.workspace.Workspace.propagation_matrix_agendaExecute
  pyarts.workspace.Workspace.propagation_matrix_agendaSet
  pyarts.workspace.Workspace.propagation_matrix_scatteringAirSimple
  pyarts.workspace.Workspace.propagation_matrix_scatteringInit
  pyarts.workspace.Workspace.propagation_matrix_scattering_agendaExecute
  pyarts.workspace.Workspace.propagation_matrix_scattering_agendaSet
  pyarts.workspace.Workspace.ray_pathGeometric
  pyarts.workspace.Workspace.ray_pathGeometricDownlooking
  pyarts.workspace.Workspace.ray_pathGeometricTangentAltitude
  pyarts.workspace.Workspace.ray_pathGeometricUplooking
  pyarts.workspace.Workspace.ray_path_atmospheric_pointFromPath
  pyarts.workspace.Workspace.ray_path_frequency_gridFromPath
  pyarts.workspace.Workspace.ray_path_observer_agendaExecute
  pyarts.workspace.Workspace.ray_path_observer_agendaSet
  pyarts.workspace.Workspace.ray_path_pointBackground
  pyarts.workspace.Workspace.ray_path_pointForeground
  pyarts.workspace.Workspace.ray_path_pointLowestFromPath
  pyarts.workspace.Workspace.ray_path_propagation_matrixAddScattering
  pyarts.workspace.Workspace.ray_path_propagation_matrixFromPath
  pyarts.workspace.Workspace.ray_path_propagation_matrix_scatteringFromPath
  pyarts.workspace.Workspace.ray_path_spectral_radiance_scatteringSunsFirstOrderRayleigh
  pyarts.workspace.Workspace.ray_path_spectral_radiance_sourceAddScattering
  pyarts.workspace.Workspace.ray_path_spectral_radiance_sourceFromPropmat
  pyarts.workspace.Workspace.ray_path_suns_pathFromPathObserver
  pyarts.workspace.Workspace.ray_path_transmission_matrixFromPath
  pyarts.workspace.Workspace.ray_path_transmission_matrix_cumulativeFromPath
  pyarts.workspace.Workspace.ray_path_zeeman_magnetic_fieldFromPath
  pyarts.workspace.Workspace.set
  pyarts.workspace.Workspace.sortedIndexOfBands
  pyarts.workspace.Workspace.spectral_radianceApplyUnit
  pyarts.workspace.Workspace.spectral_radianceApplyUnitFromSpectralRadiance
  pyarts.workspace.Workspace.spectral_radianceClearskyBackgroundTransmission
  pyarts.workspace.Workspace.spectral_radianceClearskyEmission
  pyarts.workspace.Workspace.spectral_radianceClearskyRayleighScattering
  pyarts.workspace.Workspace.spectral_radianceClearskyTransmission
  pyarts.workspace.Workspace.spectral_radianceCumulativeEmission
  pyarts.workspace.Workspace.spectral_radianceCumulativeTransmission
  pyarts.workspace.Workspace.spectral_radianceDefaultTransmission
  pyarts.workspace.Workspace.spectral_radianceIntegrateDisort
  pyarts.workspace.Workspace.spectral_radianceStepByStepEmission
  pyarts.workspace.Workspace.spectral_radianceSunOrCosmicBackground
  pyarts.workspace.Workspace.spectral_radianceSunsOrCosmicBackground
  pyarts.workspace.Workspace.spectral_radianceSurfaceBlackbody
  pyarts.workspace.Workspace.spectral_radianceUniformCosmicBackground
  pyarts.workspace.Workspace.spectral_radiance_backgroundAgendasAtEndOfPath
  pyarts.workspace.Workspace.spectral_radiance_fieldFromOperatorPath
  pyarts.workspace.Workspace.spectral_radiance_fieldFromOperatorPlanarGeometric
  pyarts.workspace.Workspace.spectral_radiance_jacobianAddPathPropagation
  pyarts.workspace.Workspace.spectral_radiance_jacobianApplyUnit
  pyarts.workspace.Workspace.spectral_radiance_jacobianEmpty
  pyarts.workspace.Workspace.spectral_radiance_jacobianFromBackground
  pyarts.workspace.Workspace.spectral_radiance_observer_agendaExecute
  pyarts.workspace.Workspace.spectral_radiance_observer_agendaSet
  pyarts.workspace.Workspace.spectral_radiance_operatorClearsky1D
  pyarts.workspace.Workspace.spectral_radiance_space_agendaExecute
  pyarts.workspace.Workspace.spectral_radiance_space_agendaSet
  pyarts.workspace.Workspace.spectral_radiance_surface_agendaExecute
  pyarts.workspace.Workspace.spectral_radiance_surface_agendaSet
  pyarts.workspace.Workspace.sunBlackbody
  pyarts.workspace.Workspace.sunFromGrid
  pyarts.workspace.Workspace.sun_pathFromObserverAgenda
  pyarts.workspace.Workspace.sunsAddSun
  pyarts.workspace.Workspace.surface_fieldEarth
  pyarts.workspace.Workspace.surface_fieldEuropa
  pyarts.workspace.Workspace.surface_fieldFromModelState
  pyarts.workspace.Workspace.surface_fieldGanymede
  pyarts.workspace.Workspace.surface_fieldInit
  pyarts.workspace.Workspace.surface_fieldIo
  pyarts.workspace.Workspace.surface_fieldJupiter
  pyarts.workspace.Workspace.surface_fieldMars
  pyarts.workspace.Workspace.surface_fieldMoon
  pyarts.workspace.Workspace.surface_fieldSetPlanetEllipsoid
  pyarts.workspace.Workspace.surface_fieldVenus
  pyarts.workspace.Workspace.swap
  pyarts.workspace.Workspace.transmission_matrix_backgroundFromPathPropagationBack
  pyarts.workspace.Workspace.transmission_matrix_backgroundFromPathPropagationFront
  pyarts.workspace.Workspace.water_equivalent_pressure_operatorMK05
  pyarts.workspace.Workspace.absorption_bands
  pyarts.workspace.Workspace.absorption_cia_data
  pyarts.workspace.Workspace.absorption_predefined_model_data
  pyarts.workspace.Workspace.absorption_species
  pyarts.workspace.Workspace.absorption_xsec_fit_data
  pyarts.workspace.Workspace.atmospheric_field
  pyarts.workspace.Workspace.atmospheric_point
  pyarts.workspace.Workspace.covariance_matrix_diagonal_blocks
  pyarts.workspace.Workspace.disort_fourier_mode_dimension
  pyarts.workspace.Workspace.disort_legendre_polynomial_dimension
  pyarts.workspace.Workspace.disort_quadrature_angles
  pyarts.workspace.Workspace.disort_quadrature_dimension
  pyarts.workspace.Workspace.disort_quadrature_weights
  pyarts.workspace.Workspace.disort_settings
  pyarts.workspace.Workspace.disort_settings_agenda
  pyarts.workspace.Workspace.disort_spectral_flux_field
  pyarts.workspace.Workspace.disort_spectral_radiance_field
  pyarts.workspace.Workspace.ecs_data
  pyarts.workspace.Workspace.frequency_grid
  pyarts.workspace.Workspace.gravity_operator
  pyarts.workspace.Workspace.inversion_iterate_agenda
  pyarts.workspace.Workspace.inversion_iterate_agenda_counter
  pyarts.workspace.Workspace.inversion_iterate_agenda_do_jacobian
  pyarts.workspace.Workspace.jacobian_targets
  pyarts.workspace.Workspace.measurement_averaging_kernel
  pyarts.workspace.Workspace.measurement_gain_matrix
  pyarts.workspace.Workspace.measurement_jacobian
  pyarts.workspace.Workspace.measurement_sensor
  pyarts.workspace.Workspace.measurement_vector
  pyarts.workspace.Workspace.measurement_vector_error_covariance_matrix
  pyarts.workspace.Workspace.measurement_vector_fitted
  pyarts.workspace.Workspace.model_state_covariance_matrix
  pyarts.workspace.Workspace.model_state_vector
  pyarts.workspace.Workspace.model_state_vector_apriori
  pyarts.workspace.Workspace.propagation_matrix
  pyarts.workspace.Workspace.propagation_matrix_agenda
  pyarts.workspace.Workspace.propagation_matrix_jacobian
  pyarts.workspace.Workspace.propagation_matrix_scattering
  pyarts.workspace.Workspace.propagation_matrix_scattering_agenda
  pyarts.workspace.Workspace.propagation_matrix_select_species
  pyarts.workspace.Workspace.propagation_matrix_source_vector_nonlte
  pyarts.workspace.Workspace.propagation_matrix_source_vector_nonlte_jacobian
  pyarts.workspace.Workspace.ray_path
  pyarts.workspace.Workspace.ray_path_atmospheric_point
  pyarts.workspace.Workspace.ray_path_frequency_grid
  pyarts.workspace.Workspace.ray_path_observer_agenda
  pyarts.workspace.Workspace.ray_path_point
  pyarts.workspace.Workspace.ray_path_propagation_matrix
  pyarts.workspace.Workspace.ray_path_propagation_matrix_jacobian
  pyarts.workspace.Workspace.ray_path_propagation_matrix_scattering
  pyarts.workspace.Workspace.ray_path_propagation_matrix_source_vector_nonlte
  pyarts.workspace.Workspace.ray_path_propagation_matrix_source_vector_nonlte_jacobian
  pyarts.workspace.Workspace.ray_path_spectral_radiance_jacobian
  pyarts.workspace.Workspace.ray_path_spectral_radiance_scattering
  pyarts.workspace.Workspace.ray_path_spectral_radiance_source
  pyarts.workspace.Workspace.ray_path_spectral_radiance_source_jacobian
  pyarts.workspace.Workspace.ray_path_suns_path
  pyarts.workspace.Workspace.ray_path_transmission_matrix
  pyarts.workspace.Workspace.ray_path_transmission_matrix_cumulative
  pyarts.workspace.Workspace.ray_path_transmission_matrix_jacobian
  pyarts.workspace.Workspace.spectral_radiance
  pyarts.workspace.Workspace.spectral_radiance_background
  pyarts.workspace.Workspace.spectral_radiance_background_jacobian
  pyarts.workspace.Workspace.spectral_radiance_jacobian
  pyarts.workspace.Workspace.spectral_radiance_observer_agenda
  pyarts.workspace.Workspace.spectral_radiance_observer_line_of_sight
  pyarts.workspace.Workspace.spectral_radiance_observer_position
  pyarts.workspace.Workspace.spectral_radiance_operator
  pyarts.workspace.Workspace.spectral_radiance_space_agenda
  pyarts.workspace.Workspace.spectral_radiance_surface_agenda
  pyarts.workspace.Workspace.spectral_radiance_unit
  pyarts.workspace.Workspace.sun
  pyarts.workspace.Workspace.sun_path
  pyarts.workspace.Workspace.suns
  pyarts.workspace.Workspace.surface_field
  pyarts.workspace.Workspace.transmission_matrix_background
  pyarts.workspace.Workspace.__eq__
  pyarts.workspace.Workspace.__ge__
  pyarts.workspace.Workspace.__gt__
  pyarts.workspace.Workspace.__hash__
  pyarts.workspace.Workspace.__iter__
  pyarts.workspace.Workspace.__le__
  pyarts.workspace.Workspace.__lt__
  pyarts.workspace.Workspace.__ne__
