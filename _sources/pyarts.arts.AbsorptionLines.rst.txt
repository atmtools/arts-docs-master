AbsorptionLines
###############

.. currentmodule:: pyarts.arts

.. autoclass:: AbsorptionLines

  .. rubric:: Overview

  .. list-table::

    * - Method
      - :func:`~pyarts.arts.AbsorptionLines.LineShapeOutput`
      - Computes the line shape paramters for the given atmospheric state
    * - Method
      - :func:`~pyarts.arts.AbsorptionLines.readxml`
      - Read variable from file
    * - Method
      - :func:`~pyarts.arts.AbsorptionLines.savexml`
      - Saves variable to file
    * - Static Method
      - :func:`~pyarts.arts.AbsorptionLines.fromxml`
      - Create variable from file
    * - Attribute
      - :attr:`~pyarts.arts.AbsorptionLines.T0`
      - :class:`float` Reference temperature for all parameters of the lines
    * - Attribute
      - :attr:`~pyarts.arts.AbsorptionLines.bathbroadening`
      - :class:`bool` Does the line broadening have bath broadening?
    * - Attribute
      - :attr:`~pyarts.arts.AbsorptionLines.broadeningspecies`
      - :class:`~pyarts.arts.ArrayOfSpecies` A list of broadening specie
    * - Attribute
      - :attr:`~pyarts.arts.AbsorptionLines.cutoff`
      - :class:`~pyarts.arts.options.AbsorptionCutoffTypeOld` Cutoff type
    * - Attribute
      - :attr:`~pyarts.arts.AbsorptionLines.cutofffreq`
      - :class:`float` Cutoff frequency
    * - Attribute
      - :attr:`~pyarts.arts.AbsorptionLines.linemixinglimit`
      - :class:`float` Linemixing limit
    * - Attribute
      - :attr:`~pyarts.arts.AbsorptionLines.lines`
      - :class:`~pyarts.arts.AbsorptionSingleLine` A list of individual lines
    * - Attribute
      - :attr:`~pyarts.arts.AbsorptionLines.lineshapetype`
      - :class:`~pyarts.arts.options.LineShapeTypeOld` Line shape type
    * - Attribute
      - :attr:`~pyarts.arts.AbsorptionLines.meta_data`
      - :class:`~pyarts.arts.String` Catalog meta data string
    * - Attribute
      - :attr:`~pyarts.arts.AbsorptionLines.mirroring`
      - :class:`~pyarts.arts.options.AbsorptionMirroringype` Mirroring type
    * - Attribute
      - :attr:`~pyarts.arts.AbsorptionLines.normalization`
      - :class:`~pyarts.arts.options.AbsorptionNormalizationTypeOld` Normalization type
    * - Attribute
      - :attr:`~pyarts.arts.AbsorptionLines.ok`
      - :class:`bool` If False, the catalog cannot be used for any calculations
    * - Attribute
      - :attr:`~pyarts.arts.AbsorptionLines.population`
      - :class:`~pyarts.arts.options.AbsorptionPopulationTypeOld` Line population distribution
    * - Attribute
      - :attr:`~pyarts.arts.AbsorptionLines.quantumidentity`
      - :class:`~pyarts.arts.QuantumIdentifier` Catalog ID
    * - Attribute
      - :attr:`~pyarts.arts.AbsorptionLines.selfbroadening`
      - :class:`bool` Does the line broadening have self broadening?
    * - Operator
      - :func:`~pyarts.arts.AbsorptionLines.__eq__`
      - Return self==value.
    * - Operator
      - :func:`~pyarts.arts.AbsorptionLines.__ge__`
      - Return self>=value.
    * - Operator
      - :func:`~pyarts.arts.AbsorptionLines.__gt__`
      - Return self>value.
    * - Operator
      - :func:`~pyarts.arts.AbsorptionLines.__hash__`
      - Return hash(self).
    * - Operator
      - :func:`~pyarts.arts.AbsorptionLines.__le__`
      - Return self<=value.
    * - Operator
      - :func:`~pyarts.arts.AbsorptionLines.__lt__`
      - Return self<value.
    * - Operator
      - :func:`~pyarts.arts.AbsorptionLines.__ne__`
      - Return self!=value.

  .. rubric:: Constructors

  .. automethod:: __init__
     :noindex:

  .. rubric:: Methods

  .. automethod:: AbsorptionLines.LineShapeOutput
  .. automethod:: AbsorptionLines.readxml
  .. automethod:: AbsorptionLines.savexml

  .. rubric:: Static Methods

  .. automethod:: AbsorptionLines.fromxml

  .. rubric:: Attributes

  .. autoattribute:: AbsorptionLines.T0
  .. autoattribute:: AbsorptionLines.bathbroadening
  .. autoattribute:: AbsorptionLines.broadeningspecies
  .. autoattribute:: AbsorptionLines.cutoff
  .. autoattribute:: AbsorptionLines.cutofffreq
  .. autoattribute:: AbsorptionLines.linemixinglimit
  .. autoattribute:: AbsorptionLines.lines
  .. autoattribute:: AbsorptionLines.lineshapetype
  .. autoattribute:: AbsorptionLines.meta_data
  .. autoattribute:: AbsorptionLines.mirroring
  .. autoattribute:: AbsorptionLines.normalization
  .. autoattribute:: AbsorptionLines.ok
  .. autoattribute:: AbsorptionLines.population
  .. autoattribute:: AbsorptionLines.quantumidentity
  .. autoattribute:: AbsorptionLines.selfbroadening

  .. rubric:: Operators

  .. automethod:: AbsorptionLines.__eq__
  .. automethod:: AbsorptionLines.__ge__
  .. automethod:: AbsorptionLines.__gt__
  .. automethod:: AbsorptionLines.__hash__
  .. automethod:: AbsorptionLines.__le__
  .. automethod:: AbsorptionLines.__lt__
  .. automethod:: AbsorptionLines.__ne__

